int find(binary_free* tree, int key)
{
	int k = 0;
	binary_free* curr = tree;
	while (curr != nullptr) {

		if (key == curr->info) {
			return k;
		}
		else if (key < curr->info) {
			curr = curr->left;
		}
		else {
			curr = curr->right;
		}
		k++;
	}
	return k;
}
void CrtBT(binary_free*& tree, int size) {
	int* Tmp = new int[size];
	for (int i = 0; i < size; i++) {
		Tmp[i] = 2 * (i + 1);
	}
	int temp = 0, j = 0;
	for (int i = size - 1; i > 0; i -= 2) {
		temp = Tmp[i];
		j = rand() % (i + 1);
		Tmp[i] = Tmp[j];
		Tmp[j] = temp;
	}
	for (int j = 0; j < size; j++) {
		insert_binary_free(tree, Tmp[j]);
	}
	delete[]Tmp;

}
